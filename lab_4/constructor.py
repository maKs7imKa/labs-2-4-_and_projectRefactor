class Dish:
    """–ö–ª–∞—Å, —â–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—î —Å—Ç—Ä–∞–≤—É –≤ –º–µ–Ω—é."""
    def __init__(self, name: str, price: float):
        self.name = name
        self.price = price

    def __repr__(self):
        return f"{self.name} - {self.price} –≥—Ä–Ω"


class Menu:
    """–ö–ª–∞—Å, —â–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—î –º–µ–Ω—é —Ä–µ—Å—Ç–æ—Ä–∞–Ω—É."""
    def __init__(self):
        self.dishes = []

    def add_dish(self, dish: Dish):
        """–î–æ–¥–∞—î —Å—Ç—Ä–∞–≤—É –¥–æ –º–µ–Ω—é."""
        self.dishes.append(dish)

    def remove_dish(self, dish_name: str):
        """–í–∏–¥–∞–ª—è—î —Å—Ç—Ä–∞–≤—É –∑ –º–µ–Ω—é –∑–∞ —ó—ó –Ω–∞–∑–≤–æ—é."""
        self.dishes = [dish for dish in self.dishes if dish.name != dish_name]

    def update_dish_price(self, dish_name: str, new_price: float):
        """–û–Ω–æ–≤–ª—é—î —Ü—ñ–Ω—É —Å—Ç—Ä–∞–≤–∏ –≤ –º–µ–Ω—é."""
        for dish in self.dishes:
            if dish.name == dish_name:
                dish.price = new_price
                break

    def get_dishes(self):
        """–ü–æ–≤–µ—Ä—Ç–∞—î —Å–ø–∏—Å–æ–∫ —Å—Ç—Ä–∞–≤."""
        return self.dishes


class Order:
    """–ö–ª–∞—Å, —â–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—î –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è."""
    def __init__(self, client, dishes):
        self.client = client
        self.dishes = dishes

    def get_total_price(self):
        """–û–±—á–∏—Å–ª—é—î –∑–∞–≥–∞–ª—å–Ω—É –≤–∞—Ä—Ç—ñ—Å—Ç—å –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è."""
        return sum(dish.price for dish in self.dishes)

    def add_dish(self, dish: Dish):
        """–î–æ–¥–∞—î –Ω–æ–≤—É —Å—Ç—Ä–∞–≤—É –¥–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è."""
        self.dishes.append(dish)

    def remove_dish(self, dish_name: str):
        """–í–∏–¥–∞–ª—è—î —Å—Ç—Ä–∞–≤—É –∑ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –∑–∞ —ó—ó –Ω–∞–∑–≤–æ—é."""
        self.dishes = [dish for dish in self.dishes if dish.name != dish_name]

    def __repr__(self):
        dishes_list = ", ".join([dish.name for dish in self.dishes])
        return f"–ó–∞–º–æ–≤–ª–µ–Ω–Ω—è –¥–ª—è {self.client}: {dishes_list} –Ω–∞ {self.get_total_price()} –≥—Ä–Ω"


class OrderDatabase:
    """Singleton-–∫–ª–∞—Å –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω—å."""
    _instance = None
    _orders = []

    def __new__(cls):
        if cls._instance is None:
            cls._instance = super(OrderDatabase, cls).__new__(cls)
        return cls._instance

    def add_order(self, order):
        """–î–æ–¥–∞—î –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –≤ –±–∞–∑—É."""
        self._orders.append(order)

    def get_orders(self):
        """–ü–æ–≤–µ—Ä—Ç–∞—î –≤—Å—ñ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è."""
        return self._orders

    def filter_orders_by_client(self, client_name):
        """–§—ñ–ª—å—Ç—Ä—É—î –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –∑–∞ –∫–ª—ñ—î–Ω—Ç–æ–º."""
        return [order for order in self._orders if order.client == client_name]

    def filter_orders_by_price(self, min_price, max_price):
        """–§—ñ–ª—å—Ç—Ä—É—î –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –∑–∞ —Ü—ñ–Ω–æ—é."""
        return [order for order in self._orders if min_price <= order.get_total_price() <= max_price]


class KitchenNotifier:
    """–û–ø–æ–≤—ñ—â—É–≤–∞—á –∫—É—Ö–Ω—ñ –ø—Ä–æ –Ω–æ–≤–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è."""
    def notify(self, order):
        print(f"üîî –ö—É—Ö–Ω—è –æ—Ç—Ä–∏–º–∞–ª–∞ –Ω–æ–≤–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è: {order}")


class OrderFactory:
    """–§–∞–±—Ä–∏–∫–∞ –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω—å."""
    @staticmethod
    def create_order(order_type, client, dishes):
        if order_type == "regular":
            return Order(client, dishes)
        else:
            raise ValueError("‚ùå –ù–µ–≤—ñ–¥–æ–º–∏–π —Ç–∏–ø –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è!")


# –ü—Ä–∏–∫–ª–∞–¥ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è
menu = Menu()
menu.add_dish(Dish("–°–∞–ª–∞—Ç", 50))
menu.add_dish(Dish("–°—É–ø", 40))

order1 = Order("–û–ª–µ–∫—Å–∞–Ω–¥—Ä", [menu.dishes[0]])
order2 = Order("–ú–∞—Ä—ñ—è", [menu.dishes[1]])

order_db = OrderDatabase()
order_db.add_order(order1)
order_db.add_order(order2)

print(order_db.get_orders())  # –ü–æ–∫–∞–∑—É—î –≤—Å—ñ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è

# –§—ñ–ª—å—Ç—Ä—É—î–º–æ –∑–∞ –∫–ª—ñ—î–Ω—Ç–æ–º
print(order_db.filter_orders_by_client("–û–ª–µ–∫—Å–∞–Ω–¥—Ä"))

# –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç—Ä–∞–≤—É –≤ –º–µ–Ω—é
menu.update_dish_price("–°–∞–ª–∞—Ç", 55)

# –î–æ–¥–∞—î–º–æ —Å—Ç—Ä–∞–≤–∏ –¥–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
order1.add_dish(menu.dishes[1])

# –í–∏–¥–∞–ª—è—î–º–æ —Å—Ç—Ä–∞–≤–∏ –∑ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
order2.remove_dish("–°—É–ø")

# –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –Ω–∞ –∫—É—Ö–Ω—é
notifier = KitchenNotifier()
notifier.notify(order1)
